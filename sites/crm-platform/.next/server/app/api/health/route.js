"use strict";(()=>{var e={};e.id=8829,e.ids=[8829],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},11:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>m,patchFetch:()=>x,requestAsyncStorage:()=>c,routeModule:()=>l,serverHooks:()=>d,staticGenerationAsyncStorage:()=>h});var a={};r.r(a),r.d(a,{GET:()=>u});var n=r(49303),o=r(88716),s=r(60670),i=r(87070);let p=new(r(53524)).PrismaClient;async function u(e){try{return await p.$queryRaw`SELECT 1`,i.NextResponse.json({status:"healthy",timestamp:new Date().toISOString(),database:"connected",auth:{nextAuthUrl:`http://localhost:${process.env.PORT||3100}`,configured:!!process.env.NEXTAUTH_SECRET,port:process.env.PORT||3100}})}catch(e){return console.error("Health check failed:",e),i.NextResponse.json({status:"unhealthy",timestamp:new Date().toISOString(),error:e instanceof Error?e.message:"Unknown error"},{status:503})}finally{await p.$disconnect()}}let l=new n.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/health/route",pathname:"/api/health",filename:"route",bundlePath:"app/api/health/route"},resolvedPagePath:"/home/bish/Downloads/sites/crm-platform/app/api/health/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:c,staticGenerationAsyncStorage:h,serverHooks:d}=l,m="/api/health/route";function x(){return(0,s.patchFetch)({serverHooks:d,staticGenerationAsyncStorage:h})}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[9380,5972],()=>r(11));module.exports=a})();