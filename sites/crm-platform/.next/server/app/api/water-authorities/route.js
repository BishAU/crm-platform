"use strict";(()=>{var t={};t.id=3439,t.ids=[3439],t.modules={53524:t=>{t.exports=require("@prisma/client")},20399:t=>{t.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:t=>{t.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},86075:(t,e,r)=>{r.r(e),r.d(e,{originalPathname:()=>g,patchFetch:()=>x,requestAsyncStorage:()=>m,routeModule:()=>l,serverHooks:()=>w,staticGenerationAsyncStorage:()=>y});var a={};r.r(a),r.d(a,{DELETE:()=>h,GET:()=>c,POST:()=>p,PUT:()=>d});var o=r(49303),i=r(88716),s=r(60670),n=r(87070),u=r(72331);async function c(t){try{let e=t.nextUrl.searchParams,r=e.get("search")||"",a=parseInt(e.get("page")||"1"),o=parseInt(e.get("limit")||"10"),i=e.get("sortBy")||"authorityName",s=e.get("sortOrder")||"asc",c=e.get("activeStatus"),p=(a-1)*o,d={AND:[r?{OR:[{authorityName:{contains:r,mode:"insensitive"}},{associatedIndigenousCommunities:{contains:r,mode:"insensitive"}}]}:{},null!==c?{activeStatus:"true"===c}:{}]},[h,l]=await Promise.all([u._.waterAuthority.count({where:d}),u._.waterAuthority.findMany({where:d,skip:p,take:o,orderBy:{[i]:s},select:{id:!0,authorityName:!0,associatedIndigenousCommunities:!0,activeStatus:!0,createdAt:!0,updatedAt:!0}})]),m=Math.ceil(h/o);return n.NextResponse.json({data:l,pagination:{total:h,totalPages:m,page:a,limit:o}})}catch(t){return console.error("Error fetching water authorities:",t),n.NextResponse.json({error:"Failed to fetch water authorities"},{status:500})}}async function p(t){try{let{name:e,...r}=await t.json(),a=await u._.waterAuthority.create({data:{...r,authorityName:e,activeStatus:!0}});return n.NextResponse.json({data:{...a,name:a.authorityName}})}catch(t){return console.error("Error creating water authority:",t),n.NextResponse.json({error:"Failed to create water authority"},{status:500})}}async function d(t){try{let{id:e,name:r,...a}=await t.json(),o=await u._.waterAuthority.update({where:{id:e},data:{...a,authorityName:r}});return n.NextResponse.json({data:{...o,name:o.authorityName}})}catch(t){return console.error("Error updating water authority:",t),n.NextResponse.json({error:"Failed to update water authority"},{status:500})}}async function h(t){try{let e=t.nextUrl.searchParams.get("id");if(!e)return n.NextResponse.json({error:"Water authority ID is required"},{status:400});return await u._.waterAuthority.delete({where:{id:e}}),n.NextResponse.json({success:!0})}catch(t){return console.error("Error deleting water authority:",t),n.NextResponse.json({error:"Failed to delete water authority"},{status:500})}}let l=new o.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/water-authorities/route",pathname:"/api/water-authorities",filename:"route",bundlePath:"app/api/water-authorities/route"},resolvedPagePath:"/home/bish/Downloads/sites/crm-platform/app/api/water-authorities/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:m,staticGenerationAsyncStorage:y,serverHooks:w}=l,g="/api/water-authorities/route";function x(){return(0,s.patchFetch)({serverHooks:w,staticGenerationAsyncStorage:y})}},72331:(t,e,r)=>{r.d(e,{_:()=>i});var a=r(53524);let o=globalThis;o.prisma||(o.prisma=new a.PrismaClient({log:["error"]}));let i=o.prisma}};var e=require("../../../webpack-runtime.js");e.C(t);var r=t=>e(e.s=t),a=e.X(0,[9380,5972],()=>r(86075));module.exports=a})();