# VCC Platform - HTTP redirect
server {
    listen 80;
    listen [::]:80;
    server_name vcc.myinvoices.today;

    # Redirect all HTTP traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }

    # Allow health checks on HTTP
    location /api/health {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}

# VCC Platform - HTTPS server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name vcc.myinvoices.today;

    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/vcc.myinvoices.today/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/vcc.myinvoices.today/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS (uncomment if you're sure)
    # add_header Strict-Transport-Security "max-age=63072000" always;

    # Health check fallback location
    location @health_fallback {
        access_log off;
        add_header Content-Type application/json;
        return 503 '{"status":"unhealthy","error":"Service unavailable"}';
    }

    # Root location
    location / {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Health check endpoint
    location /api/health {
        proxy_pass http://127.0.0.1:3000/api/health;
        proxy_intercept_errors on;
        error_page 502 504 = @health_fallback;
    }

    # Static assets
    location /assets/ {
        proxy_pass http://127.0.0.1:3000/assets/;
        proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
        proxy_cache_valid 200 60m;
        expires 1y;
        add_header Cache-Control "public, no-transform";
    }
}
